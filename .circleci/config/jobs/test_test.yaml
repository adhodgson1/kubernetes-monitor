machine:
  enabled: true
  docker_layer_caching: true

working_directory: ~/kubernetes-monitor

steps:
  - checkout

  - run:
      name: Get IP
      command: |
        IP=$(ifconfig -a | grep -A 1 eth0 | grep "inet addr:" | awk '{print $2}' | cut -d ':' -f2)
        echo "export IP=${IP} >> $BASH_ENV"

  - run:
      name: Download KinD
      command: |
        curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/v0.7.0/kind-linux-amd64
        chmod +x kind

  - run:
      name: Download kubectl
      command: |
        curl -L https://storage.googleapis.com/kubernetes-release/release/1.18.0/bin/linux/amd64/kubectl -o kubectl
        chmod +x kubectl

  - run:
      name: Create KinD cluster with private container registry
      command: |
        # create registry container unless it already exists
        reg_name=${IP}
        reg_port='5000'
        running="$(docker inspect -f '{{.State.Running}}' "${reg_name}" 2>/dev/null || true)"
        if [ "${running}" != 'true' ]; then
          docker run \
            -d --restart=always -p "${IP}:${reg_port}:5000" --name "${reg_name}" \
            registry:2
        fi

        # create a cluster with the local registry enabled in containerd
        cat <<EOF | kind create cluster --config=-
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        containerdConfigPatches:
        - |-
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."${IP}:${reg_port}"]
            endpoint = ["http://${IP}:${reg_port}:${reg_port}"]
        EOF

        # connect the registry to the cluster network
        docker network connect "kind" "${reg_name}"

  - run:
      name: Create KinD cluster with private container registry
      command: |
        cat <<EOF | tee job.yaml
        apiVersion: batch/v1
        kind: Job
        metadata:
          name: my-job
        spec:
          template:
            spec:
              restartPolicy: Never
              containers:
              - name: my-container
                image: golang:1.13.1-alpine3.10
                command: 
                  - "sh"
                args:
                  - "-c"
                  - "apk --no-cache add git make gcc musl-dev ostree-dev go-md2man &&
                  git clone --depth 1 -b 'v0.2.0' https://github.com/containers/skopeo $GOPATH/src/github.com/containers/skopeo &&
                  cd $GOPATH/src/github.com/containers/skopeo &&
                  make binary-local-static DISABLE_CGO=1 &&
                  make install &&
                  skopeo copy --dest-tls-verify=false docker://nginx:latest docker://${IP}:5000/nginx:latest"
        EOF
        ./kubectl apply -f job.yaml
        sleep 10
        ./kubectl logs -f job.batch/my-job
