description: |
    Creates an OpenShift instance within CircleCI that allows us to test
    the the `snyk-monitor` operator upgrade path. The job uses a virutal
    machine running in CircleCI to start the OpenShift Cluster, and uses
    various scripts to install the operator, upgrade it, and verify the
    expected functionality.

executor: redhat-openshift/default

working_directory: ~/kubernetes-monitor

steps:
  - checkout

  - run:
      name: Update hosts for test cluster
      command: echo "${OPENSHIFT4_ETC_HOSTS_ENTRY}" | sudo tee -a /etc/hosts

  - redhat-openshift/login-and-update-kubeconfig:
      insecure-skip-tls-verify: true
      openshift-platform-version: 4.x
      username: $OPENSHIFT4_USER
      password: $OPENSHIFT4_PASSWORD
      server-address: $OPENSHIFT4_CLUSTER_URL

  - run:
      name: Get last released operator version
      command: |
        set -xeo pipefail

        # Verify that python exists!
        if ! which python > /dev/null; then
          >&2 echo "Failed to find python"
          exit 1
        fi

        python -m pip install requests pyyaml

        VERSION=$(python ./scripts/operator/tests/test-operator-upgrade.py)

        echo "Currently released version is: ${VERSION}"
        echo "export OC_VERSION=${VERSION}" >> $BASH_ENV

  - run:
      name: Package and deploy last released operator
      command: |
        set -xeo pipefail

        if [[ -z $OC_VERSION ]]; then
          >&2 echo "OC_VERSION variable is not set"
          exit 1
        fi

        # Package operator to be uploaded to quay.io
        ./scripts/operator/package-operator.sh $OC_VERSION $OC_VERSION $OC_VERSION

        # We do not want to include the templating files when we push the operator,
        # therefore we move the directory to /temp, and restore it later
        mkdir temp
        mv ./snyk-operator/deploy/olm-catalog/snyk-operator/0.0.0 ./temp/

  - run:
      name: Push operator to quay
      command: |
        set -eo pipefail

        python -m pip install operator-courier

        export QUAY_TOKEN=$(curl -H "Content-Type: application/json" \
          -XPOST https://quay.io/cnr/api/v1/users/login \
          -d "{\"user\": {\"username\": \"${QUAY_USERNAME}\", \"password\": \"${QUAY_PASSWORD}\"}}" \
          | jq -r .token)

        OPERATOR_DIR=./snyk-operator/deploy/olm-catalog/snyk-operator/
        QUAY_NAMESPACE=snyk-runtime
        PACKAGE_NAME=snyk-operator

        operator-courier push "${OPERATOR_DIR}" "${QUAY_NAMESPACE}" "${PACKAGE_NAME}" "${OC_VERSION}" "${QUAY_TOKEN}"
        echo "export QUAY_TOKEN=${QUAY_TOKEN}" >> $BASH_ENV

  - run:
      name: Configure snyk-monitor namespace
      command: |
        set -xo pipefail

        ns=$(kubectl get ns snyk-monitor --no-headers --output=go-template={{.metadata.name}} 2>/dev/null)

        set -e
        if [[ -z "${ns}"" ]]; then
          echo "snyk-monitor namespace not found, creating..."
          kubectl create ns snyk-monitor
        fi

        kubectl create secret generic snyk-monitor -n snyk-monitor --from-literal=integrationId=2eb0b704-de07-4280-bab6-a7911153047b --from-literal=dockercfg.json={}

  - run:
      name: Apply operator installation files
      command: |
        set -xe

        kubectl apply -f ./test/fixtures/operator/operator-source.yaml
        kubectl apply -f ./test/fixtures/operator/installation.yaml

        set +e
        opsrc=$(kubectl get operatorsource snyk-operator -n openshift-marketplace --no-headers 2>/dev/null | awk '{print $7}')

        set -e
        if [[ -z "${opsrc}" || "${opsrc}" == "Failed" ]]; then
          >&2 echo "failed to deploy operator source resource"
          exit 1
        fi

  - run:
      name: Deploy snyk-monitor resource
      command: |
        set -o pipefail

        kubectl apply -f ./test/fixtures/operator/test-resource.yaml

        kubectl get pods -n snyk-monitor --no-headers | \
          grep "snyk-monitor" | \
          awk 'END { if (NR==0) exit 1; else print $1 }' | \
          xargs -I{} kubectl wait pod/{} -n snyk-monitor --timeout 60s --for condition=Ready

  - run:
      name: Upgrade snyk-monitor operator
      command: |
        set -xeo pipefail

        curl -XDELETE -H "Accept: application/json" -H "Content-Type: application/json" \
          -H "Authorization: ${QUAY_TOKEN}" "https://quay.io/cnr/api/v1/packages/snyk-runtime/snyk-operator/$OC_VERSION/helm"

        mv ./temp/0.0.0 ./snyk-operator/deploy/olm-catalog/snyk-operator/
        rm -rf ./snyk-operator/deploy/olm-catalog/snyk-operator/${OC_VERSION}

        LATEST_TAG_WITH_V=`git describe --abbrev=0 --tags ${CIRCLE_SHA1}` && \
          LATEST_TAG=${LATEST_TAG_WITH_V:1}

        ./scripts/operator/package-operator.sh ${LATEST_TAG} ${LATEST_TAG} ${LATEST_TAG}

        OPERATOR_DIR=./snyk-operator/deploy/olm-catalog/snyk-operator/
        QUAY_NAMESPACE=snyk-runtime
        PACKAGE_NAME=snyk-operator

        operator-courier push "${OPERATOR_DIR}" "${QUAY_NAMESPACE}" "${PACKAGE_NAME}" "${LATEST_TAG}" "${QUAY_TOKEN}"
        echo "export LATEST_TAG=${LATEST_TAG}" >> $BASH_ENV

        kubectl delete -f ./test/fixtures/operator/operator-source.yaml
        kubectl apply -f ./test/fixtures/operator/operator-source.yaml

        VERSION=$(kubectl get pods -n snyk-monitor --no-headers | \
          grep "snyk-monitor" | \
          awk 'END { if (NR==0) exit 1; else print $1 }' | \
          xargs -I{} kubectl get pod {} -n snyk-monitor -o jsonpath={..image} | \
          awk '{print $1}' | grep -oE "[0-9]{1}\.[0-9]{1,2}\.[0-9]{1,3}$")

        if [[ "${VERSION}" != "${LATEST_TAG}" ]]; then
          &>2 echo "versions (${VERSION}) does not match expected (${LATEST_TAG})!"
          exit 1
        fi

        echo "Update complete!"

  - run:
      name: Cleanup
      command: |
        curl -XDELETE -H "Accept: application/json" -H "Content-Type: application/json" \
          -H "Authorization: ${QUAY_TOKEN}" "https://quay.io/cnr/api/v1/packages/snyk-runtime/snyk-operator/${LATEST_TAG}/helm"

        kubectl delete -f ./test/fixtures/operator/operator-source.yaml
        kubectl delete -f ./test/fixtures/operator/installation.yaml
        kubectl delete -f ./test/fixtures/operator/test-resource.yaml
        kubectl delete ns snyk-monitor
      when: always